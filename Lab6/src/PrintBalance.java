import java.text.DateFormat;
import java.text.NumberFormat;
import java.util.Currency;
import java.util.Date;
import java.util.Locale;
import java.util.ResourceBundle;
import java.util.Scanner;


/**
 * TODO A simple class that needs to be localized
 *
 * @author mohan.
 *         Created Mar 27, 2010.
 */
public class PrintBalance{

	private static Date today;
	private static Locale currentLocale;
	private static ResourceBundle messages;
	private static DateFormat df;
	private static String lang, count, name;
	private static Currency countCurrency;
	/**
	 * Simple Java Method that is crying out to be localized.
	 *
	 * @param args
	 */
	public static void main(String args[])
	{
	
		Scanner scanInput = new Scanner(System.in);
		today = new Date();
		//gets the locale
		lang = scanInput.nextLine();
		count = scanInput.nextLine();
		
		currentLocale = new Locale(lang,count);
		
		messages = ResourceBundle.getBundle("MessageBundle", currentLocale);
		
		//Greeting
		System.out.println(messages.getString("helloWorld"));
		
		//Get User's Name
		//"Please enter your name"
		System.out.println(messages.getString("enterName"));
		name = scanInput.nextLine();
		//"I am pleased to meet you "
		System.out.println(messages.getString("pleasedTo") + " " + name);
		
		//print today's date, balance and bid goodbye
		//converts to locale
		df = DateFormat.getDateTimeInstance(DateFormat.FULL,DateFormat.FULL,currentLocale);
		df.format(today);
		System.out.println(messages.getString("asOf")+ " " + today.toString());
		//"You owe the school $9876543.21"
		countCurrency = Currency.getInstance(currentLocale);
		System.out.println(messages.getString("youOwe") + " " + messages.getString("curr") + " " + countCurrency);
		//"Good Bye"
		System.out.println(messages.getString("farwell"));
	}
	
	/**
	 * Getter method for the Date generated by the program
	 * @return today
	 */
	public static Date getDate()
	{
		return today;
	}
	
	/**
	 * Getter method for the Locale generated by the program
	 * @return currentLocale
	 */
	public static Locale getCurrentLocale()
	{
		return currentLocale;
	}
	
	/**
	 * Getter method for the ResourceBundle generated by the program
	 * @return messages
	 */
	public static ResourceBundle getMessages()
	{
		return messages;
	}
	
	/**
	 * Getter method for the DateFormat generated by the program
	 * @return
	 */
	public static DateFormat getDateFormat()
	{
		return df;
	}
	
	/**
	 * Getter method for the language input into the program
	 * @return lang
	 */
	public static String getLanguage()
	{
		return lang;
	}
	
	/**
	 * Getter method for the country input into the program
	 * @return count
	 */
	public static String getCountry()
	{
		return count;
	}
	
	/**
	 * Getter method for the country currency in program
	 * @return countCurrency
	 */
	public static Currency getCountryCurrency()
	{
		return countCurrency;
	}
	
	/**
	 * Setter method for the language input into the program
	 * @param str
	 */
	public static void setLanguage(String str)
	{
		lang = str;
	}
	
	/**
	 * Setter method for the country input into the program
	 * @param str
	 */
	public static void setCountry(String str)
	{
		count = str;
	}
	
	/**
	 * Setter for date format
	 * @param date display, time display, locale
	 */
	public static void setDateFormat(int date, int time, Locale locale)
	{
		df = DateFormat.getDateTimeInstance(date, time, locale);
	}
	
	/**
	 * Setter method for the locale into the program
	 * @param langu, countr
	 */
	public static void setLocale(String langu, String countr)
	{
		currentLocale = new Locale(langu, countr);
	}
	
	/**
	 * Setter method for the bundle of the program
	 * @param locale
	 */
	public static void setMessages(Locale locale)
	{
		messages = ResourceBundle.getBundle("MessageBundle", locale);
	}
	
	/**
	 * Setter method for country currency
	 * @param locale
	 */
	public static void setCountryCurrency(Locale locale)
	{
		countCurrency = Currency.getInstance(locale);
	}
	
	/**
	 * Generates a date
	 */
	public static void setDateCurrent()
	{
		today = new Date();
	}
}

